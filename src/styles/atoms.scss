
// Atoms
//
// This is the atoms chapter. Atoms are the only parts that contain actual
// class and style definitions. The higher level abastractions are mere
// composites of the existing atoms.
//
// Styleguide 1.0

// Ejemplo (Descripci√≥n)
//
//
// .dc-bloque1_modelo1 - Modelo 1
// .dc-bloque1_modelo2 - Modelo 2
// default - Modelo base
//
// markup:
// <div class="dc-bloque1 {$modifiers}">
//   <div class="dc-bloque1__propiedad1">Primera propiedad</div>
//   <div class="dc-bloque1__propiedad2">Segunda propiedad</div>
// </div>
//
// Styleguide 1.1
.dc-bloque1 {
  font-family: $eg-default-fonts;
  border: thin solid $eg-color-black;
  .dc-bloque1__propiedad1 {
    font-size: 1.2em;
    background-color: $eg-color-orange;
    padding: $eg-spacings;
  }
  .dc-bloque1__propiedad2 {
    padding: $eg-spacings;
  }
  &.dc-bloque1_modelo1 {
    .dc-bloque1__propiedad1 {
      background-color: $eg-color-cyan;
    }
  }
  &.dc-bloque1_modelo2 {
    .dc-bloque1__propiedad1 {
      background-color: $eg-color-brown;
    }
  }
}

// Ejemplo (Caja  cuadrada)
//
//
// .dc-bloque2_box1 - Box 1
// .dc-bloque2_box2 - Box 2
// default - Box default
//
// markup:
// <div class="dc-bloque2 {$modifiers}">
//   <span>Color del Span</span>
// </div>
//
// Styleguide 1.2
.dc-bloque2 {
  width: 200px;
  height: 200px;
  margin: 0 auto;
  padding: 10px;
  span {
    color: $eg-color-cyan
  }
  &.dc-bloque2_box1 {
    background-color: $eg-color-cyan;
    border: 2px solid $eg-color-orange;
    span {
      color: $eg-color-brown;
    }
  }
  &.dc-bloque2_box2 {
    background-color: $eg-color-brown;
    border: 2px solid $eg-color-cyan;
    span {
      color: $eg-color-cyan;
    }
  }
}

// Ejemplo (Caja alargada)
//
//
// .dc-bloque3_box1 - Box 1
// .dc-bloque3_box2 - Box 2
// default - Box default
//
// markup:
// <div class="dc-bloque3 {$modifiers}">
//   <span>Color del Span</span>
// </div>
//
// Styleguide 1.3
.dc-bloque3 {
  width: 100%;
  margin: 0 auto;
  padding: 5px;
  span {
    color: $eg-color-cyan;
    font-weight: bold;
    text-align: center;
    text-decoration: underline;
  }
  &.dc-bloque3_box1 {
    background-color: $eg-color-cyan;
    border: 2px solid $eg-color-orange;
    span {
      color: $eg-color-brown;
    }
  }
  &.dc-bloque3_box2 {
    background-color: $eg-color-brown;
    border: 2px solid $eg-color-cyan;
    span {
      color: $eg-color-cyan;
    }
  }
}

// Input Field Atom
//
// A simple text input.
//
// Exercise 1.5a: Write some style definitions for the input field to spice it
// up. Just add different background colors to the default and active states if
// you do not feel creative right now.
//
// Default - the interactive default state
// :focus - the state when the field has focus
// :hover - the state when the field has Hover
//
// markup:
// <input type="text" class="eg-input {$modifiers}">
// <input type="text" class="eg-input {$modifiers}" placeholder="placeholder">
// <input type="text" class="eg-input {$modifiers}" value="value">
//
// Styleguide 1.4

.eg-input {
  color:$eg-color-brown;
  &:focus {
    color:$eg-color-cyan;
    font-weight:bold;
  }
  &:hover {
    color:$eg-color-cyan;
    font-weight:bold;
    text-decoration:underline;
  }
}

// Ejemplo (Con wrapper)
//
//
// .li_modelo1 - Elemento lista modelo 1
// .li_modelo2 - Elemento lista modelo 2
// default - Elemento lista
//
// markup:
// <li class="li_defecto {$modifiers}">Item</li>
//
// sg-wrapper:
//   <ul>
//     <sg-wrapper-content/>
//   </ul>
//
// Styleguide 1.5
.li_defecto {
    color:red;
    &.li_modelo1{
      color:blue;
    }
    &.li_modelo2{
      color:brown;
    }
}